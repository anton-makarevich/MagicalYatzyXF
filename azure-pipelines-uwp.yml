# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- develop

jobs:
  - job: run_build
    pool:
      vmImage: 'windows-latest'

    variables:
      - group: my-uwp
      - name: solution
        value: 'MagicalYatzyXF.sln'
      - name: project
        value: 'MagicalYatzyXF/MagicalYatzyXF.UWP/MagicalYatzyXF.UWP.csproj'
      - name: buildPlatform
        value: 'x64'
      - name: buildConfiguration
        value: 'Debug'
      - name: appxPackageDir
        value: '$(build.artifactStagingDirectory)\AppxPackages\\'

    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Install nuget'

    - task: UseDotNet@2
      displayName: 'Use dotnet sdk 3.x'
      inputs:
        version: 3.x
        includePreviewVersions: false

    - task: DownloadSecureFile@1
      name: secureCert
      displayName: 'Get the certificate file'
      inputs:
        secureFile: 'my-uwp-2019.pfx'

    - task: PowerShell@2
      displayName: 'Install the certificate'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Start adding the PFX file to the certificate store."
          $pfxpath = '$(secureCert.secureFilePath)'
          $password = '$(signingCert.password)'
          Add-Type -AssemblyName System.Security
          $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
          $cert.Import($pfxpath, $password, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]"PersistKeySet")
          $store = new-object system.security.cryptography.X509Certificates.X509Store -argumentlist "MY", CurrentUser
          $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]"ReadWrite")
          $store.Add($cert)
          $store.Close()

    - task: NuGetCommand@2
      displayName: 'Restore nuget packages'
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: 'Build UWP app'
      inputs:
        platform: '$(buildPlatform)'
        solution: '$(project)'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'
