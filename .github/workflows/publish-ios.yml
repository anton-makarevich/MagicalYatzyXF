name: Publish iOS App

on:
  push:
    branches:
      - develop
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Inject extra env vars
        uses: FranzDiebold/github-env-vars-action@v2
        
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      - name: Setup Keychain
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          APPLE_DISTRIBUTION_CERT: ${{ secrets.APPLE_DISTRIBUTION_CERT }}
          MY_PP_ADHOC: ${{ secrets.MY_PP_ADHOC }}
          CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
        run: |
          echo "--CREATING KEYCHAIN--"
          # Create a new keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          # Set it as the default keychain
          security default-keychain -s build.keychain
          # Modify keychain settings to keep it unlocked longer
          security set-keychain-settings -lut 21600 build.keychain
          # Unlock the keychain so it can be used without an authorisation prompt
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain

          echo "--DECODE CERT--"
          # Decode certificate to file
          echo "$APPLE_DISTRIBUTION_CERT" | base64 --decode > certificate.p12
          
          echo "--DECODE PP--"       
          # Decode provisioning profile to file
          echo "$MY_PP_ADHOC" | base64 --decode > MagicalYatzy_AdHoc.mobileprovision
          ls
          cat MagicalYatzy_AdHoc.mobileprovision
          echo "--IMPORT CERT--"
          # Import into keychain
          security import certificate.p12 -k build.keychain -P "$CERT_PASSWORD" -A
          
          # Allow codesign to access keychain
          security set-key-partition-list -S apple-tool:,apple:,codesign:,pkgbuild:,productsign:, -s -k "$KEYCHAIN_PASSWORD" build.keychain
          security list-keychain -d user -s build.keychain
          
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp MagicalYatzy_AdHoc.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles
      
      - name: Build and publish
        run: |
          cd MagicalYatzyAUI/MagicalYatzyAUI.iOS
          dotnet workload restore
          dotnet publish -c Release -r ios-arm64 --self-contained -o bin/Release/iOS/publish
          cd bin/Release/iOS/publish
          ls

      - name: Upload to App Center
        env:
          APPCENTER_ACCESS_TOKEN: ${{ secrets.APP_CENTER_TOKEN }}
        run: |
          npm install -g appcenter-cli
          appcenter distribute groups publish -f MagicalYatzyAUI/MagicalYatzyAUI.Android/bin/Release/android/publish/nl.sanetby.magicalyatzy.ipa -g Alpha --app anton.makarevich/Magical-Yatzy-iOS --build-version 0.1 --build-number 1
