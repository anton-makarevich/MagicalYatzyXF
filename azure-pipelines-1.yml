trigger:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'Web\Functions\MagicalYatzyFunctions.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- script: dotnet restore $(solution)
  displayName: 'Restore nuget packages'

- script: dotnet test Tests\Functions\LoginTests\LoginTests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:ExcludeByAttribute=GeneratedCodeAttribute /p:Include=[MagicalYatzy]*
  displayName: 'Run Login tests'

- bash: |
    curl -s https://codecov.io/bash > codecov
    chmod +x codecov
    ./codecov -f "Tests\Functions\LoginTests\coverage.opencover.xml" -t $(codecov.token)
  displayName: 'Upload Login tests results'

- script: dotnet test Tests\Functions\ScoreSaverTests\ScoreSaverTests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:ExcludeByAttribute=GeneratedCodeAttribute /p:Include=[MagicalYatzy]*
  displayName: 'Run ScoreSaver tests'

- bash: |
    curl -s https://codecov.io/bash > codecov
    chmod +x codecov
    ./codecov -f "Tests\Functions\ScoreSaverTests\coverage.opencover.xml" -t $(codecov.token)
  displayName: 'Upload ScoreSaver tests results'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'Web\Functions\LoginFunction\LoginFunction.csproj'

- script: dotnet test Web\Functions\LoginFunction\LoginFunction.csproj -c $(buildConfiguration)
  displayName: 'Run Login tests'
    
# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:SkipInvalidConfigurations=true'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
